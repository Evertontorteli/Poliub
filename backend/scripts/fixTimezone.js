// backend/scripts/fixTimezone.js

/**
 * Script para verificar e corrigir timezone do banco de dados
 * Railway est√° em Virginia (UTC-5), precisamos for√ßar UTC
 * Execute: node scripts/fixTimezone.js
 */

const { initDb, getConnection } = require('../database');

async function checkAndFixTimezone() {
  console.log('üîç Verificando configura√ß√£o de timezone do banco...');
  console.log('üìç Railway est√° em US East (Virginia, USA) - UTC-5');
  console.log('üéØ Objetivo: For√ßar UTC (+00:00) para evitar problemas de timezone\n');
  
  try {
    // Inicializa o banco primeiro
    console.log('üöÄ Inicializando conex√£o com o banco...');
    await initDb();
    
    const conn = await getConnection();
    
    try {
      // Verifica timezone atual
      const [timezoneResult] = await conn.query('SELECT @@global.time_zone, @@session.time_zone, @@system_time_zone');
      console.log('üìä Timezone atual:');
      console.log(`   Global: ${timezoneResult[0]['@@global.time_zone']}`);
      console.log(`   Session: ${timezoneResult[0]['@@session.time_zone']}`);
      console.log(`   System: ${timezoneResult[0]['@@system_time_zone']}`);
      
      // Verifica se o timezone est√° correto
      if (timezoneResult[0]['@@session.time_zone'] !== '+00:00') {
        console.log('\n‚ö†Ô∏è  Configurando timezone para UTC...');
        
        // Configura timezone para UTC (mais agressivo)
        await conn.query("SET time_zone = '+00:00'");
        await conn.query("SET SESSION time_zone = '+00:00'");
        await conn.query("SET @@session.time_zone = '+00:00'");
        await conn.query("SET @@global.time_zone = '+00:00'");
        
        // Verifica novamente
        const [newTimezoneResult] = await conn.query('SELECT @@session.time_zone, @@global.time_zone');
        console.log(`‚úÖ Timezone configurado:`);
        console.log(`   Session: ${newTimezoneResult[0]['@@session.time_zone']}`);
        console.log(`   Global: ${newTimezoneResult[0]['@@global.time_zone']}`);
      } else {
        console.log('\n‚úÖ Timezone j√° est√° configurado corretamente para UTC');
      }
      
      // Testa com uma data atual
      const [dateResult] = await conn.query('SELECT NOW() as NOW, UTC_TIMESTAMP() as UTC_TIMESTAMP, SYSDATE() as SYSDATE');
      console.log('\nüìÖ Teste de datas:');
      console.log(`   NOW(): ${dateResult[0].NOW}`);
      console.log(`   UTC_TIMESTAMP(): ${dateResult[0].UTC_TIMESTAMP}`);
      console.log(`   SYSDATE(): ${dateResult[0].SYSDATE}`);
      
      // Verifica se s√£o iguais (deveriam ser se timezone estiver correto)
      if (dateResult[0].NOW.getTime() === dateResult[0].UTC_TIMESTAMP.getTime()) {
        console.log('‚úÖ Datas est√£o sincronizadas - timezone configurado corretamente');
      } else {
        console.log('‚ö†Ô∏è  Datas n√£o est√£o sincronizadas - verificar configura√ß√£o');
        const diffMs = Math.abs(dateResult[0].NOW.getTime() - dateResult[0].UTC_TIMESTAMP.getTime());
        const diffHours = diffMs / (1000 * 60 * 60);
        console.log(`   Diferen√ßa: ${diffHours.toFixed(2)} horas`);
      }
      
      // Teste espec√≠fico para Virginia
      console.log('\nüåç Teste espec√≠fico para Railway (Virginia):');
      const [virginiaTest] = await conn.query(`
        SELECT 
          TIMESTAMP('2024-01-01 23:42:00') as horario_brasilia,
          CONVERT_TZ(TIMESTAMP('2024-01-01 23:42:00'), '-03:00', '+00:00') as horario_utc,
          CONVERT_TZ(TIMESTAMP('2024-01-01 23:42:00'), '-03:00', '-05:00') as horario_virginia
      `);
      console.log(`   Hor√°rio Bras√≠lia (23:42): ${virginiaTest[0].horario_brasilia}`);
      console.log(`   Hor√°rio UTC: ${virginiaTest[0].horario_utc}`);
      console.log(`   Hor√°rio Virginia: ${virginiaTest[0].horario_virginia}`);
      
    } finally {
      conn.release();
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar timezone:', error.message);
  }
}

// Executa se chamado diretamente
if (require.main === module) {
  checkAndFixTimezone()
    .then(() => {
      console.log('\n‚úÖ Verifica√ß√£o de timezone conclu√≠da');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Falha na verifica√ß√£o:', error);
      process.exit(1);
    });
}

module.exports = { checkAndFixTimezone };
